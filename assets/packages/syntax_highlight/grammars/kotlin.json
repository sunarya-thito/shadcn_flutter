{
  "name": "Kotlin",
  "version": "1.0.0",
  "fileTypes": ["kt", "kts"],
  "scopeName": "source.kotlin",

  "foldingStartMarker": "\\{\\s*$",
  "foldingStopMarker": "^\\s*\\}",

  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#annotations"
    },
    {
      "include": "#types"
    },
    {
      "include": "#operators"
    }
  ],

  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.kotlin",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.block.documentation.kotlin",
          "begin": "/\\*\\*",
          "end": "\\*/",
          "patterns": [
            {
              "name": "entity.name.tag.documentation.kotlin",
              "match": "@[a-zA-Z]+"
            }
          ]
        },
        {
          "name": "comment.line.double-slash.kotlin",
          "match": "//.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.kotlin",
          "match": "\\b(if|else|for|while|do|when|try|catch|finally|throw|break|continue|return)\\b"
        },
        {
          "name": "keyword.declaration.kotlin",
          "match": "\\b(fun|val|var|class|object|interface|enum|sealed|companion|inline|data|lateinit|init|constructor)\\b"
        },
        {
          "name": "keyword.modifier.kotlin",
          "match": "\\b(public|private|protected|internal|abstract|open|final|override|const|tailrec|suspend|external|annotation)\\b"
        },
        {
          "name": "keyword.operator.kotlin",
          "match": "\\b(as|is|in|out)\\b"
        },
        {
          "name": "keyword.other.kotlin",
          "match": "\\b(import|package|typealias)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.kotlin",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.kotlin",
              "match": "\\\\."
            },
            {
              "name": "string.template.expression.kotlin",
              "begin": "\\$\\{",
              "end": "\\}"
            },
            {
              "name": "string.template.simple.kotlin",
              "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
            }
          ]
        },
        {
          "name": "string.quoted.triple.kotlin",
          "begin": "\"\"\"",
          "end": "\"\"\""
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.kotlin",
          "match": "\\b([+-]?\\d+(\\.\\d+)?([eE][+-]?\\d+)?[fFbBlL]?)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.kotlin",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "meta.annotation.kotlin",
          "match": "@[a-zA-Z][a-zA-Z0-9_]*"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.type.primitive.kotlin",
          "match": "\\b(Byte|Short|Int|Long|Float|Double|Boolean|Char|Unit|String|Any|Nothing)\\b"
        },
        {
          "name": "entity.name.type.class.kotlin",
          "match": "\\b([A-Z][a-zA-Z0-9_]*)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.kotlin",
          "match": "(\\+|-|\\*|/|%|==|!=|<=|>=|&&|\\|\\||!|\\.|::|\\+=|-=|\\*=|/=|%=)"
        }
      ]
    }
  }
}
